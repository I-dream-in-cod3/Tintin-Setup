#NOP /* Buy reagents automatically from Bray */
#ACTION {^  %*%s%d for %d coins}
{
    #LOCAL {_reagent} {%1};
    #FORMAT {_reagent} {%l} {$_reagent};
    #SEND {!buy %3 $_reagent};
};

#ACTION {^Duncan says: Thank you for donating %d corpses.}
{
    .log add {necromancer.donates.log} {Boot: $_boot[number] Corpses: %1};
};

#ALIAS {donate}
{
    #IF {"%0" == "finished"}
    {
        #NOP %%1;
        #IF {$_eqDonates > 0}
        {
            .log {add} {necromancer.donates.log} {Boot: $_boot[number] Equipment: $_eqDonates};
        };
        #UNACTION {{^.{50}: for (\d+) coins.}};
        #RETURN;
    }
    #VAR {_eqDonates} {0};
    #ACTION {{^.{50}: for (\d+) coins.}}
    {
        #MATH {_eqDonates} {$_eqDonates + %%2};
    };
    event_oneshot {e_prompt} {Necromancer Guild.tin} {#NOP %%1;donate finished};
    #SEND {donate %0};
};

#ALIAS {.study}
{
    #NOP %1;
    #IF {"%0" == "default"}
    {
        #VAR {my[necromancer][powerdefaults]} {$my[necromancer][power]};
        #ECHO {Necromancer power defaults set:};
        #VAR {my[necromancer][powerdefaults]};
    };
    #ELSEIF {"%0" != ""}
    {
        #ECHO {.study                   - study missing powers};
        #ECHO {.study default           - set the default powers};
        #ECHO {.study <power> <amount>  - Study that power the given number of times};
    };
    #ELSE
    {
        #IF {"$my[necromancer][powerdefaults]" == ""}
        {
            .study help
        };
        #ELSE
        {
            #FOREACH {*my[necromancer][powerdefaults][]} {_necStudy[power]}
            {
                #IF {"$my[necromancer][power][$_necStudy[power]]" == ""}
                {
                    #VAR {_necStudy[count]} {$my[necromancer][powerdefaults][$_necStudy[power]]};
                };
                #ELSE
                {
                    #MATH {_necStudy[count]} {$my[necromancer][powerdefaults][$_necStudy[power]] - $my[necromancer][power][$_necStudy[power]]};
                    #IF {$_necStudy[count] < 1} {#VAR {_necStudy[count]} {0}};
                };
                #VAR {_necStudy[$_necStudy[count]][$_necStudy[power]]} {};
            };
            #UNVAR {_necStudy[count]};
            #UNVAR {_necStudy[power]};
            #UNVAR {_necStudy[0]};
            #IF {&_necStudy[] > 0}
            {
                #FOREACH {*_necStudy[]} {v}
                {
                    #WHILE {"*_necStudy[$v][-1]" != ""}
                    {
                        .studyPower {*_necStudy[$v][-1]} {$v};
                        #UNVAR {_necStudy[$v][-1]};
                    };
                };
            };
        };
        #UNVAR {_necStudy};
    };
};

#ALIAS {.studyPower}
{
    #NOP %1;
    #IF {%2 > 100}
    {
        #SEND {!study %1 100};
        .studyPower {%1} {@fEval{%2-100}};
    };
    #ELSE
    {
        #SEND {!study %1 %2};
    };
};
