#NOP /* Convert a Comma Separated Value (CSV) stream to a Tintin associative array */
#FUNCTION {fCSVin}
{
  #NOP %1;
  #LOCAL {_fCSV} {};
  #LOCAL {_fCSV[sep]} {,};
  #LOCAL {_fCSV[rec]} {0};
  #LOCAL {_fCSV[blk1]} {"};
  #LOCAL {_fCSV[blk2]} {'};
  #LOCAL {_fCSV[b1]} {0};
  #LOCAL {_fCSV[b2]} {0};
  #LOCAL {_fCSV[in]} {%0};
  #FOREACH {$_fCSV[in][%*]} {_fCSV[line]}
  {
    #LOCAL {_fCSV[fld]} {0};
    #LOCAL {_fCSV[tmp]} {};
    #PARSE {$_fCSV[line]} {_fCSV[c]}
    {
      #REGEXP {$_fCSV[c]} {$_fCSV[blk1]} {#MATH {_fCSV[b1]} {!$_fCSV[b1]};};
      #REGEXP {$_fCSV[c]} {$_fCSV[blk2]} {#MATH {_fCSV[b2]} {!$_fCSV[b2]};};

      #IF {"$_fCSV[c]" == "$_fCSV[sep]" && !$_fCSV[b1] && !$_fCSV[b2]}
      {
        #MATH {_fCSV[fld]} {$_fCSV[fld] + 1};
        #IF {$_fCSV[rec] == 0}
        {
          #LOCAL {_fCSV[fields][$_fCSV[fld]]} {$_fCSV[tmp]};
        }
        {
          #LOCAL {_fCSV[out][$_fCSV[rec]][$_fCSV[fields][$_fCSV[fld]]]} {$_fCSV[tmp]};
        };
        #LOCAL {_fCSV[tmp]} {};
      }
      {
        #LOCAL {_fCSV[tmp]} {$_fCSV[tmp]$_fCSV[c]};
      };
    };
    #MATH {_fCSV[fld]} {$_fCSV[fld] + 1};
    #IF {$_fCSV[rec] == 0}
    {
      #LOCAL {_fCSV[fields][$_fCSV[fld]]} {$_fCSV[tmp]};
    }
    {
      #LOCAL {_fCSV[out][$_fCSV[rec]][$_fCSV[fields][$_fCSV[fld]]]} {$_fCSV[tmp]};
    }; 
    #MATH {_fCSV[rec]} {$_fCSV[rec] + 1};
  };
  #RETURN {$_fCSV[out]};
};
