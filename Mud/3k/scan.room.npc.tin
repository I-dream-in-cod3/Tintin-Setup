#ALIAS {.scanRoomNPC}
{
	#LOCAL {_sRN[match]} {@fGetNPCRegex{%3}};
    #IF {"$_npc[$_sRN[match]][nomap]" == "1"}
    {
        #RETURN;
    }
	#FORMAT {_sRN[hash]} {%H} {$_sRN[match]};
	.scanRoomNPCID       {$_sRN[match]} {%3} {%2};
	.scanRoomNPCDesc     {$_sRN[match]} {%3} {%2} {$_sRN[hash]};
	.scanRoomNPCLocation {$_sRN[match]};
	.scanRoomNPCConsider {$_sRN[match]} {%3} {%2} {$_sRN[hash]};
	event_raise {e_scan_room_npc} {$_sRN[match]} {%3} {%2} {$_sRN[hash]};    
};
event_register {e_room_npc} {h_scan_npc} {.scanRoomNPC};

#ALIAS {.scanRoomNPCID}
{
	#IF {&_npc[%1][id] == 0}
	{
		#VAR {_npc[%1][id]} {%3};
		#VAR {_npc[%1][name]} {%2};
		.scanRoomNPCSave {%1};		
	};
};

#ALIAS {.scanRoomNPCDesc}
{
	#LOCAL {_sRND} {};
	#CLASS {cScanNPC%4} SIZE {_sRND}; 
	#IF {$_sRND == 0}
	{
		#CLASS {cScanNPC%4} {kill};
		#IF {&_npc[%1][desc] == 0}
		{
			#CLASS {cScanNPC%4} {assign}
			{
				#ACTION {_scan.room.npc.desc.%4}
				{
					#LINE GAG;
					#CLASS {cScanNPC%4} {assign} 
					{
						#ACTION {{^(.*$)}}
						{
							#LIST {_npc[%1][desc]} {add} {%%%0};
						} {2};
					};
				} {1};

				#ACTION {_scan.room.npc.desc.end.%4}
				{
					#LINE GAG;
					#CLASS {cScanNPC%4} {kill};
					.scanRoomNPCSave {%1};
				} {1};
			};

			#LIST {room[commandqueue]} ADD {!_scan.room.npc.desc.%4};
			#IF {&_npc[%1][id] > 0}
			{
				#LINE SUBSTITUTE VARIABLES {#LIST {room[commandqueue]} ADD {!exa $_npc[%1][id]}};
			};
			#ELSE 
			{
				#LIST {room[commandqueue]} ADD {!exa %3};				
			};
			#LIST {room[commandqueue]} ADD {!_scan.room.npc.desc.end.%4};
		};
	};
};

#ALIAS {.scanRoomNPCLocation}
{
	#IF {"&_npc[%1][location][area]" == "0" && "$_npc[%1][nomap]" != "1"}
	{
		#IF {&map[area][path] > 0}
		{
			#LOCAL {_scanRoomVnum} {};
			#MAP GET ROOMVNUM {_scanRoomVnum};
			#VAR {_npc[%1][location][$map[area][path]][$_scanRoomVnum]} {};
            #IF {&_area_npc_index[%1][$map[area][path]] == 0}
            {
			    #VAR {_area_npc_index[%1][$map[area][path]]} {$_scanRoomVnum};
            };
		};
		.scanRoomNPCSave {%1};
	};
};

#ALIAS {.scanRoomNPCConsider}
{
	#IF {&map[area][scaler] == 0}
	{
		scaler
	};
	#IF {"&_npc[%1][size][$map[area][scaler]][consider]" == "0"}
	{
		#ACTION {_scan.room.npc.consider.%4}
		{
			#LINE GAG;
			#ACTION {^Monster class: %%%*$}
			{
				#VAR {_npc[%1][size][$map[area][scaler]][consider]} {%%%1};
				.scanRoomNPCSave {%1};
				#UNACTION {^Monster class: %%%*$};
			};				
			#UNACTION {_scan.room.npc.consider.%4};			
		} {1};
		#LIST {room[commandqueue]} ADD {!_scan.room.npc.consider.%4};
		#IF {&_npc[%1][id] > 0}
		{
			#LIST {room[commandqueue]} ADD {!consider $_npc[%1][id]};
		};
		#ELSE 
		{
			#LIST {room[commandqueue]} ADD {!consider %3};				
		};		
	};
};

#ALIAS {.scanRoomNPCSave}
{
	#IF {&_npc[%1][nomap] == 0 && &map[area][path] > 0}
	{
		.mapVariable {_npc[%1]} {$_npc[%1]};
	};
};

#FUNCTION {fGetNPCRegex}
{
	#UNVAR {_fGNR};
	#VAR {_fGNR[input]} {%1};
	#REGEXP {$_fGNR[input]} {{^(.+?)(\s\[(scratched|wounded|dying)\])?(\s\<[.?*!^]+\>)?(\sattacking you!)?$}}
	{
		#VAR {_fGNR[input]} {&2};
	};
	#FOREACH {*_npc[%*]} {_fGNR[regexp]}
	{
		#LINE SUBSTITUTE {variables} 
		{
			#REGEXP {$_fGNR[input]} {{$_fGNR[regexp]}}
			{
				#VAR {_fGNR[match]} {1};
			};
		};
		#IF {"$_fGNR[match]" == "1"}
		{
			#RETURN {$_fGNR[regexp]};
		};
	};
	#RETURN {^@fEscapeString{$_fGNR[input]}$};
};