#ALIAS {.scanRoomNPC}
{
	#IF {@fLocked{scan.%*}} {#RETURN};
	#LOCAL {_sRN[match]} {%6};
	#IF {"$_npc[$_sRN[match]][nomap]" == "1"}
	{
		#RETURN;
	}
	#FORMAT {_sRN[hash]} {%H} {$_sRN[match]};
    #LINE SUBSTITUTE VARIABLES {.RoomAddCommand {#VAR {_npc[$_sRN[match]]} {@fFormatNPCData{$_npc[$_sRN[match]]}}} {3}};
	#LINE SUBSTITUTE VARIABLES {.RoomAddCommand {.scanRoomNPCID       {$_sRN[match]} {%3} {%2}} {3}};
	#LINE SUBSTITUTE VARIABLES {.RoomAddCommand {.scanRoomNPCDesc     {$_sRN[match]} {%3} {%2} {$_sRN[hash]}} {3}};
	#LINE SUBSTITUTE VARIABLES {.RoomAddCommand {.scanRoomNPCLocation {$_sRN[match]}} {3}};
	#LINE SUBSTITUTE VARIABLES {.RoomAddCommand {.scanRoomNPCConsider {$_sRN[match]} {%3} {%2} {$_sRN[hash]}} {3}};
	#LINE SUBSTITUTE VARIABLES {.RoomAddCommand {event_raise {e_scan_room_npc} {$_sRN[match]} {%3} {%2} {$_sRN[hash]}} {4}};
};
event_register {e_room_npc} {h_scan_npc} {.scanRoomNPC};

#ALIAS {.scanRoomNPCID}
{
	#IF {"$_npc[%1][id]" == ""}
	{
		#VAR {_npc[%1][id]} {%3};
		#VAR {_npc[%1][name]} {%2};
		.scanRoomNPCSave {%1};
	};
};

#ALIAS {.scanRoomNPCDesc}
{
	#LOCAL {_sRND} {};
	#CLASS {cScanNPC%4} SIZE {_sRND};
	#IF {$_sRND == 0}
	{
		#CLASS {cScanNPC%4} {kill};
		#IF {&_npc[%1][desc][] == 0}
		{
			#CLASS {cScanNPC%4} {assign}
			{
				#ACTION {_scan.room.npc.desc.%4}
				{
					#LINE GAG;
					#CLASS {cScanNPC%4} {assign}
					{
						#ACTION {{^(.*$)}}
						{
							#LIST {_npc[%1][desc]} {add} {%%%0};
						} {2};
					};
				} {1};

				#ACTION {_scan.room.npc.desc.end.%4}
				{
					#LINE GAG;
					#CLASS {cScanNPC%4} {kill};
					.scanRoomNPCSave {%1};
				} {1};
			};

			#SEND {!_scan.room.npc.desc.%4};
			#IF {&_npc[%1][id] > 0}
			{
				#SEND {!exa $_npc[%1][id]};
			};
			#ELSE
			{
				#SEND {!exa %3};
			};
			#SEND {!_scan.room.npc.desc.end.%4};
		};
	};
};

#ALIAS {.scanRoomNPCLocation}
{
	#IF {&map[area][path] > 0}
	{
		#IF {"$_npc[%1][_area]" == ""}
		{
			#VAR {_npc[%1][_area]} {$map[area][path]};
		};
		#LOCAL {_scanRoomVnum} {};
		#MAP GET ROOMVNUM {_scanRoomVnum};
		#IF {&_npc[%1][location][$map[area][path]][$_scanRoomVnum] == 0}
		{
			#VAR {_npc[%1][location][$map[area][path]][$_scanRoomVnum]} {};
			#IF {&_area_npc_index[%1][$map[area][path]] == 0}
			{
				#VAR {_area_npc_index[%1][$map[area][path]]} {$_scanRoomVnum};
			};
			.scanRoomNPCSave {%1};
		};
	};
};

#ALIAS {.scanRoomNPCConsider}
{
	#IF {&map[area][scaler] == 0}
	{
		#VAR {map[area][scaler]} {0};
	};
	#IF {"&_npc[%1][size][$map[area][scaler]][consider]" == "0"}
	{
		#ACTION {_scan.room.npc.consider.%4}
		{
			#LINE GAG;
			#ACTION {^Monster class: %*$}
			{
				#VAR {_npc[%1][size][$map[area][scaler]][consider]} {%%%1};
				.scanRoomNPCSave {%1};
				#UNACTION {^Monster class: %*$};
			};
			#UNACTION {_scan.room.npc.consider.%4};
		} {1};
		#SEND {!_scan.room.npc.consider.%4};
		#IF {&_npc[%1][id] > 0}
		{
			#SEND {!consider $_npc[%1][id]};
		};
		#ELSE
		{
			#SEND {!consider %3};
		};
	};
};

#ALIAS {.scanRoomNPCSave}
{
	#IF {"$_npc[%1][nomap]" != "1" && &map[area][path] > 0}
	{
		.mapVariable add {_npc} {%1} {$_npc[%1]};
	};
};

#FUNCTION {fGetNPCRegex}
{
	#UNVAR {_fGNR};
	#VAR {_fGNR[input]} {%1};
	#REGEXP {$_fGNR[input]} {{^(.+?)(\s\<[.?*!^]+\>)?(\(demoralized\))?(\s\[(scratched|wounded|dying)\])?(\sattacking you!)?$}}
	{
		#VAR {_fGNR[input]} {&2};
	};
	#FOREACH {*_npc[%*]} {_fGNR[regexp]}
	{
		#LINE SUBSTITUTE {variables}
		{
			#REGEXP {$_fGNR[input]} {{$_fGNR[regexp]}}
			{
				#VAR {_fGNR[match]} {1};
			};
		};
		#IF {"$_fGNR[match]" == "1"}
		{
			#RETURN {$_fGNR[regexp]};
		};
	};
	#RETURN {^@fEscapeString{$_fGNR[input]}$};
};

#FUNCTION {fFormatNPCData}
{
	#NOP %1;
	#LOCAL {_npcData} {%0};
	#FOREACH {_area;alignment;attacks;autokill;desc;hunts;id;location;name;size;undead;vulnerabilities} {_f}
	{
		#IF {&_npcData[$_f] == 0}
		{
			#VAR {_npcData[$_f]} {};
		};
	};
	#UNVAR {_f};
	#RETURN {$_npcData};
};